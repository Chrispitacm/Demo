/* PARTY_TYPE */
--Agregando un nuevo comentario al codigo
SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'PARTY_TYPE' AND DATABASENAME = 'EDW_ODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO PARTY_TYPE
DROP TABLE EDW_ODS.PARTY_TYPE;
.LABEL PARTY_TYPE

CREATE MULTISET TABLE EDW_ODS.PARTY_TYPE,
NO FALLBACK,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO
(
	Party_Type_Cd SMALLINT,
	Party_Type_Desc VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL ,
    Load_Dttm TIMESTAMP(0),
    Publish_Dt DATE Format 'YYYY-MM-DD' NOT NULL,
	Source_Data_Feed_Id INTEGER COMPRESS ( 2040 )
)
UNIQUE PRIMARY INDEX ( Party_Type_Cd )
;

COMMENT ON TABLE EDW_ODS.PARTY_TYPE IS 'LATAM Customer Type.';
COMMENT ON COLUMN EDW_ODS.PARTY_TYPE.Party_Type_Cd IS 'Party Category Code';
COMMENT ON COLUMN EDW_ODS.PARTY_TYPE.Party_Type_Desc IS 'Party Category description. i.e. Individual, Organization.';
COMMENT ON COLUMN EDW_ODS.PARTY_TYPE.Load_Dttm IS 'Historical tracking of each record inserted in entity';
COMMENT ON COLUMN EDW_ODS.PARTY_TYPE.Publish_Dt IS 'Date of publication of data';
COMMENT ON COLUMN EDW_ODS.PARTY_TYPE.Source_Data_Feed_Id IS 'Data Source identifier';


/* PARTY_TYPE */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'PARTY_TYPE' AND DATABASENAME = 'EDW_VTODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO PARTY_TYPEVW
DROP VIEW EDW_VTODS.PARTY_TYPE;
.LABEL PARTY_TYPEVW


REPLACE VIEW EDW_VTODS.PARTY_TYPE
(
	Party_Type_Cd,
	Party_Type_Desc,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
)
AS
LOCK TABLE EDW_ODS.PARTY_TYPE FOR ACCESS
SELECT 
	Party_Type_Cd,
	Party_Type_Desc,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
FROM EDW_ODS.PARTY_TYPE
;


---------------------------------------------------------------------------------

/* ELITE_CATEGORY_LEVEL */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'ELITE_CATEGORY_LEVEL' AND DATABASENAME = 'EDW_ODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO ELITE_CATEGORY_LEVEL
DROP TABLE EDW_ODS.ELITE_CATEGORY_LEVEL;
.LABEL ELITE_CATEGORY_LEVEL

CREATE MULTISET TABLE EDW_ODS.ELITE_CATEGORY_LEVEL,
NO FALLBACK,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO
(
	Elite_Category_Lvl_Cd SMALLINT NOT NULL ,
	Elite_Category_Lvl_Desc VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL ,
	Elite_Category_Lvl_Weight_Val SMALLINT NOT NULL ,
	Load_Dttm TIMESTAMP(0),
	Publish_Dt DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	Source_Data_Feed_Id INTEGER COMPRESS ( 2038 )
)
UNIQUE PRIMARY INDEX ( Elite_Category_Lvl_Cd )
;

COMMENT ON TABLE EDW_ODS.ELITE_CATEGORY_LEVEL IS 'LATAM Elite category information.';
COMMENT ON COLUMN EDW_ODS.ELITE_CATEGORY_LEVEL.Elite_Category_Lvl_Cd IS 'Elite Category code';
COMMENT ON COLUMN EDW_ODS.ELITE_CATEGORY_LEVEL.Elite_Category_Lvl_Desc IS 'Elite Category description.';
COMMENT ON COLUMN EDW_ODS.ELITE_CATEGORY_LEVEL.Elite_Category_Lvl_Weight_Val IS 'Elite Category weight for priorization purpopse.';
COMMENT ON COLUMN EDW_ODS.ELITE_CATEGORY_LEVEL.Load_Dttm IS 'Historical tracking of each record inserted in entity';
COMMENT ON COLUMN EDW_ODS.ELITE_CATEGORY_LEVEL.Publish_Dt IS 'Date of publication of data';
COMMENT ON COLUMN EDW_ODS.ELITE_CATEGORY_LEVEL.Source_Data_Feed_Id IS 'Data Source identifier';


/* ELITE_CATEGORY_LEVEL */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'ELITE_CATEGORY_LEVEL' AND DATABASENAME = 'EDW_VTODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO ELITE_CATEGORY_LEVELVW
DROP VIEW EDW_VTODS.ELITE_CATEGORY_LEVEL;
.LABEL ELITE_CATEGORY_LEVELVW


REPLACE VIEW EDW_VTODS.ELITE_CATEGORY_LEVEL
(
	Elite_Category_Lvl_Cd,
	Elite_Category_Lvl_Desc,
	Elite_Category_Lvl_Weight_Val,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
)
AS
LOCK TABLE EDW_ODS.ELITE_CATEGORY_LEVEL FOR ACCESS
SELECT 
	Elite_Category_Lvl_Cd,
	Elite_Category_Lvl_Desc,
	Elite_Category_Lvl_Weight_Val,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
FROM EDW_ODS.ELITE_CATEGORY_LEVEL
;


---------------------------------------------------------------------------------

/* PARTY_ELITE_CATEGORY_LEVEL */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'PARTY_ELITE_CATEGORY_LEVEL' AND DATABASENAME = 'EDW_ODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO PARTY_ELITE_CATEGORY_LEVEL
DROP TABLE EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL;
.LABEL PARTY_ELITE_CATEGORY_LEVEL

CREATE MULTISET TABLE EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL,
NO FALLBACK,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO
(
	Party_Id INTEGER NOT NULL,
	Party_Categ_Level_Start_Dt DATE Format 'YYYY-MM-DD' NOT NULL,
	Party_Categ_Level_End_Dt DATE Format 'YYYY-MM-DD' NOT NULL,
	Elite_Category_Lvl_Cd SMALLINT NOT NULL COMPRESS (1,2,3,4,5) ,
	Load_Dttm TIMESTAMP(0),
	Publish_Dt DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	Source_Data_Feed_Id INTEGER COMPRESS ( 2037 )
)
PRIMARY INDEX ( Party_Id )
;


COMMENT ON TABLE EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL IS 'Timeline relationship between Party and Elite category.';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Party_Id IS 'Customer identfier from Customer Source.';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Party_Categ_Level_Start_Dt IS 'Start date for Relationship between Party - Elite Category.';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Party_Categ_Level_End_Dt IS 'End date for Relationship between Party - Elite Category.';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Elite_Category_Lvl_Cd IS 'Elite Category code';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Load_Dttm IS 'Historical tracking of each record inserted in entity';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Publish_Dt IS 'Date of publication of data';
COMMENT ON COLUMN EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL.Source_Data_Feed_Id IS 'Data Source identifier';


/* PARTY_ELITE_CATEGORY_LEVEL */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'PARTY_ELITE_CATEGORY_LEVEL' AND DATABASENAME = 'EDW_VTODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO PARTY_ELITE_CATEGORY_LEVELVW
DROP VIEW EDW_VTODS.PARTY_ELITE_CATEGORY_LEVEL;
.LABEL PARTY_ELITE_CATEGORY_LEVELVW

REPLACE VIEW EDW_VTODS.PARTY_ELITE_CATEGORY_LEVEL
(
	Party_Id,
	Party_Categ_Level_Start_Dt,
	Party_Categ_Level_End_Dt,
	Elite_Category_Lvl_Cd,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
)
AS
LOCK TABLE EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL FOR ACCESS
SELECT 
	Party_Id,
	Party_Categ_Level_Start_Dt,
	Party_Categ_Level_End_Dt,
	Elite_Category_Lvl_Cd,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
FROM EDW_ODS.PARTY_ELITE_CATEGORY_LEVEL
;

---------------------------------------------------------------------------------
/* PARTY */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'PARTY' AND DATABASENAME = 'EDW_ODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO PARTY
DROP TABLE EDW_ODS.PARTY;
.LABEL PARTY

CREATE MULTISET TABLE EDW_ODS.PARTY,
NO FALLBACK,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO
(
	Party_Id INTEGER NOT NULL,
	Party_Type_Cd SMALLINT,
	Party_Creation_Dt DATE Format 'YYYY-MM-DD',
	Party_Update_Dttm TIMESTAMP(0),
	Load_Dttm TIMESTAMP(0),
	Publish_Dt DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	Source_Data_Feed_Id INTEGER COMPRESS ( 2039 )
)
PRIMARY INDEX ( Party_Id )
;


COMMENT ON TABLE EDW_ODS.PARTY IS 'Head of Customer information';
COMMENT ON COLUMN EDW_ODS.PARTY.Party_Id IS 'Customer identfier from Customer Source.';
COMMENT ON COLUMN EDW_ODS.PARTY.Party_Type_Cd IS 'Customer type code.';
COMMENT ON COLUMN EDW_ODS.PARTY.Party_Creation_Dt IS 'Date of creation for Customer identifier.';
COMMENT ON COLUMN EDW_ODS.PARTY.Party_Update_Dttm IS 'Update date for head of customer information.';
COMMENT ON COLUMN EDW_ODS.PARTY.Load_Dttm IS 'Historical tracking of each record inserted in entity.';
COMMENT ON COLUMN EDW_ODS.PARTY.Publish_Dt IS 'Date of publication of data.';
COMMENT ON COLUMN EDW_ODS.PARTY.Source_Data_Feed_Id IS 'Data Source identifier.';

/* PARTY */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'PARTY' AND DATABASENAME = 'EDW_VTODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO PARTYVW
DROP VIEW EDW_VTODS.PARTY;
.LABEL PARTYVW


REPLACE VIEW EDW_VTODS.PARTY
(
	Party_Id,
	Party_Type_Cd,
	Party_Creation_Dt,
	Party_Update_Dttm,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
)
AS
LOCK TABLE EDW_ODS.PARTY FOR ACCESS
SELECT 
	Party_Id,
	Party_Type_Cd,
	Party_Creation_Dt,
	Party_Update_Dttm,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
FROM EDW_ODS.PARTY
;

---------------------------------------------------------------------------------
/* TRAVEL_ACCOUNT_DOCUMENT_PARTY */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'TRAVEL_ACCOUNT_DOCUMENT_PARTY' AND DATABASENAME = 'EDW_ODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO TRAVEL_ACCOUNT_DOCUMENT_PARTY
DROP TABLE EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY;
.LABEL TRAVEL_ACCOUNT_DOCUMENT_PARTY


CREATE MULTISET TABLE EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY,
NO FALLBACK,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO
(
    Prime_Ticket_Num VARCHAR(15) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL ,
    Issue_Dt DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	Party_Id INTEGER NOT NULL,
	Load_Dttm TIMESTAMP(0),
	Publish_Dt DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	Source_Data_Feed_Id INTEGER COMPRESS ( 252 )
)
PRIMARY INDEX ( Prime_Ticket_Num, Issue_Dt)
PARTITION BY RANGE_N(Issue_Dt  BETWEEN DATE '2013-09-01' AND DATE '2018-12-31' EACH INTERVAL '1' DAY , NO RANGE, UNKNOWN)
INDEX (Party_Id)
;


COMMENT ON TABLE EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY IS 'Relationship between Prime Ticket and Customer';
COMMENT ON COLUMN EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY.Prime_Ticket_Num IS 'Prime Ticket Number.';
COMMENT ON COLUMN EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY.Issue_Dt IS 'Prime Ticket Issue date.';
COMMENT ON COLUMN EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY.Party_Id IS 'Customer identfier from Customer Source.';
COMMENT ON COLUMN EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY.Load_Dttm IS 'Historical tracking of each record inserted in entity.';
COMMENT ON COLUMN EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY.Publish_Dt IS 'Date of publication of data.';
COMMENT ON COLUMN EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY.Source_Data_Feed_Id IS 'Data Source identifier.';


/* TRAVEL_ACCOUNT_DOCUMENT_PARTY */

SELECT 1 FROM DBC.TABLESV WHERE TABLENAME = 'TRAVEL_ACCOUNT_DOCUMENT_PARTY' AND DATABASENAME = 'EDW_VTODS';
.IF ACTIVITYCOUNT = 0 THEN GOTO TRAVEL_ACCOUNT_DOCUMENT_PARTYVW
DROP VIEW EDW_VTODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY;
.LABEL TRAVEL_ACCOUNT_DOCUMENT_PARTYVW

REPLACE VIEW EDW_VTODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY
(
	Prime_Ticket_Num,
	Issue_Dt,
	Party_Id,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
)
AS
LOCK TABLE EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY FOR ACCESS
SELECT 
	Prime_Ticket_Num,
	Issue_Dt,
	Party_Id,
	Load_Dttm,
	Publish_Dt,
	Source_Data_Feed_Id
FROM EDW_ODS.TRAVEL_ACCOUNT_DOCUMENT_PARTY
;

---------------------------------------------------------------------------------